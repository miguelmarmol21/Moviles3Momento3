{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useState } from \"react\";\nimport { DatePicker } from 'react-native-datepicker';\nimport { styles } from \"../assets/styles/styles\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RentScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    errorMess = _useState2[0],\n    setErrorMess = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cars = _useState4[0],\n    setCars = _useState4[1];\n  var URL = 'http://127.0.0.1:3600';\n  var getCustomers = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var response = yield axios.get(URL + \"/rent\");\n      console.log(response.data);\n      setCars(response.data);\n    });\n    return function getCustomers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(Text, {\n      style: {\n        fontFamily: 'Arial',\n        fontSize: 30,\n        marginTop: 10\n      },\n      children: \"Renta de Carros\"\n    }), _jsxs(Picker, {\n      mode: \"dropdown\",\n      style: styles.picker,\n      onValueChange: function onValueChange() {},\n      children: [_jsx(Picker.Item, {\n        label: \"\"\n      }), cars.map(function (car) {\n        return _jsx(Picker.Item, {\n          label: car.plateRent,\n          value: car.plateRent\n        }, car.plateRent);\n      })]\n    }), _jsx(DatePicker, {\n      date: date,\n      mode: \"date\",\n      placeholder: \"select date\",\n      format: \"DD-MM-YYYY\",\n      minDate: \"01-01-2016\",\n      maxDate: \"01-01-2019\",\n      confirmBtnText: \"Confirm\",\n      cancelBtnText: \"Cancel\",\n      customStyles: {\n        dateIcon: {\n          position: 'absolute',\n          left: 0,\n          top: 4,\n          marginLeft: 0\n        },\n        dateInput: {\n          marginLeft: 36\n        }\n      },\n      onDateChange: function onDateChange(date) {\n        setDate(date);\n      }\n    }), _jsx(View, {\n      style: [{\n        flexDirection: \"row\",\n        marginTop: 20\n      }],\n      children: _jsx(Button, {\n        style: {\n          marginTop: 15,\n          marginEnd: 10\n        },\n        icon: \"share\",\n        mode: \"contained\",\n        buttonColor: \"#0265FE\",\n        onPress: getCustomers,\n        children: \"Buscar\"\n      })\n    }), _jsx(Text, {\n      style: {\n        fontFamily: 'Arial',\n        fontSize: 15,\n        marginTop: 20,\n        color: 'red'\n      },\n      children: errorMess\n    })]\n  });\n}","map":{"version":3,"names":["TextInput","Button","useState","DatePicker","styles","axios","jsx","_jsx","jsxs","_jsxs","RentScreen","_ref","navigation","_useState","_useState2","_slicedToArray","errorMess","setErrorMess","_useState3","_useState4","cars","setCars","URL","getCustomers","_ref2","_asyncToGenerator","response","get","console","log","data","apply","arguments","View","style","container","children","Text","fontFamily","fontSize","marginTop","Picker","mode","picker","onValueChange","Item","label","map","car","plateRent","value","date","placeholder","format","minDate","maxDate","confirmBtnText","cancelBtnText","customStyles","dateIcon","position","left","top","marginLeft","dateInput","onDateChange","setDate","flexDirection","marginEnd","icon","buttonColor","onPress","color"],"sources":["C:/Users/1/Desktop/Moviles3Momento3/Rent/screens/RentScreen.jsx"],"sourcesContent":["import { Text, View, Picker } from \"react-native\";\r\nimport { TextInput, Button } from \"react-native-paper\";\r\nimport { useState } from \"react\";\r\nimport {DatePicker} from 'react-native-datepicker';\r\nimport { styles } from \"../assets/styles/styles\";\r\nimport axios from 'axios';\r\n\r\nexport default function RentScreen({ navigation }) {\r\n  const [errorMess, setErrorMess] = useState(\"\");\r\n  const [cars,setCars] = useState([]);\r\n\r\n  const URL = 'http://127.0.0.1:3600'\r\n\r\n  const   getCustomers = async () =>{\r\n    const response = await axios.get(`${URL}/rent`);\r\n    console.log(response.data)\r\n    setCars(response.data)\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <View style={[styles.container]}>\r\n      <Text style={{fontFamily:'Arial',fontSize:30,marginTop:10}}>Renta de Carros</Text>\r\n      <Picker\r\n        mode=\"dropdown\"\r\n        style={styles.picker}\r\n        onValueChange={()=>{}}\r\n      >\r\n        <Picker.Item label=\"\"/>\r\n      { \r\n        cars.map(car => <Picker.Item key={car.plateRent} label={car.plateRent} value={car.plateRent}/>)\r\n      }\r\n      </Picker>\r\n      <DatePicker\r\n          date={date} // Initial date from state\r\n          mode=\"date\" // The enum of date, datetime and time\r\n          placeholder=\"select date\"\r\n          format=\"DD-MM-YYYY\"\r\n          minDate=\"01-01-2016\"\r\n          maxDate=\"01-01-2019\"\r\n          confirmBtnText=\"Confirm\"\r\n          cancelBtnText=\"Cancel\"\r\n          customStyles={{\r\n            dateIcon: {\r\n              //display: 'none',\r\n              position: 'absolute',\r\n              left: 0,\r\n              top: 4,\r\n              marginLeft: 0,\r\n            },\r\n            dateInput: {\r\n              marginLeft: 36,\r\n            },\r\n          }}\r\n          onDateChange={(date) => {\r\n            setDate(date);\r\n          }}\r\n        />\r\n      {/* <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Nro Placa\"\r\n        mode=\"outlined\"\r\n        onChangeText={(plateNumber) => setPlateNumber(plateNumber)}\r\n        value={plateNumber}\r\n      />\r\n      <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Estado Placa\"\r\n        mode=\"outlined\"\r\n        editable={false}\r\n        value={stateCar =='' ? 'Disponible': stateCar}\r\n      />\r\n      <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Usuario\"\r\n        mode=\"outlined\"\r\n        onChangeText={(userName) => setUserName(userName)}\r\n        value={userName}\r\n      />\r\n      <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Nro Renta\"\r\n        mode=\"outlined\"\r\n        onChangeText={(rentNumber) => setRentNumber(rentNumber)}\r\n        value={rentNumber}\r\n      />\r\n      <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Fecha Renta\"\r\n        mode=\"outlined\"\r\n        onChangeText={(rentDate) => setRentDate(rentDate)}\r\n        value={rentDate}\r\n      /> */}\r\n      <View style={[{flexDirection: \"row\", marginTop:20 }]}>\r\n        <Button\r\n          style={{ marginTop: 15, marginEnd: 10 }}\r\n          icon=\"share\"\r\n          mode=\"contained\"\r\n          buttonColor=\"#0265FE\"\r\n          onPress={getCustomers}\r\n        >Buscar</Button>\r\n        {/* <Button\r\n          style={{ marginTop: 15 }}\r\n          icon=\"repeat\"\r\n          mode=\"contained\"\r\n          buttonColor=\"#0265FE\"\r\n          onPress={loadDataCar}\r\n        >Buscar Placa</Button>\r\n      </View>\r\n      <View style={[{flexDirection: \"row\" }]}>\r\n      <Button\r\n        style={{ marginTop: 15, marginEnd: 10 }}\r\n        icon=\"repeat\"\r\n        mode=\"contained\"\r\n        buttonColor=\"#0265FE\"\r\n        onPress={searchRent}\r\n      >Listar</Button>\r\n      <Button\r\n        style={{ marginTop: 15, marginEnd: 10 }}\r\n        textColor=\"#0265FE\"\r\n        onPress={Limpiar}\r\n      >Limpiar</Button>\r\n      <Button\r\n            style={{marginTop:10}}\r\n            textColor=\"#0265FE\"\r\n            onPress={()=>{\r\n                navigation.navigate('Profile')\r\n            }}\r\n      >Volver</Button> */}\r\n      </View>\r\n      <Text style={{fontFamily:'Arial',fontSize:15,marginTop:20,color:'red'}}>{errorMess}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}