{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { styles } from \"../assets/styles/styles\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Button } from \"react-native-paper\";\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    messageProfile = _useState2[0],\n    setMessageProfile = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    contain = _useState4[0],\n    setContain = _useState4[1];\n  useEffect(function () {\n    userLogin();\n  }, []);\n  var getUser = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var values = yield AsyncStorage.getItem('keyProfile');\n      return new Promise(function (resolve) {\n        if (values.length === 0) {\n          reject(new Error('No existen datos'));\n        } else {\n          setTimeout(function () {\n            resolve(JSON.parse(values));\n          }, 1000);\n        }\n      });\n    });\n    return function getUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  function userLogin() {\n    var user = getUser();\n    user.then(function (values) {\n      setMessageProfile(\"Bienvenido \" + values.names);\n      setTimeout(function () {\n        setContain(true);\n      }, 2000);\n    });\n  }\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(View, {\n      style: [styles.view, {\n        flex: 2\n      }],\n      children: _jsx(Supra, {\n        name: \"supra\"\n      })\n    }), _jsx(View, {\n      style: [styles.view, {\n        flex: 4\n      }],\n      children: _jsx(Text, {\n        style: {\n          fontFamily: 'Arial',\n          fontSize: 30,\n          marginTop: 10\n        },\n        children: messageProfile\n      })\n    }), _jsx(View, {\n      style: [styles.view, {\n        flex: 3\n      }],\n      children: contain && _jsx(Text, {\n        style: {\n          fontFamily: 'Arial',\n          fontSize: 20,\n          marginTop: 10\n        },\n        children: \"Que deseas hacer\"\n      })\n    })]\n  });\n}\nfunction Banner(props) {\n  return _jsx(Image, {\n    style: {\n      width: '100%',\n      height: '100%',\n      resizeMode: 'stretch'\n    },\n    source: require(\"../assets/\" + props.name + \".gif\")\n  });\n}","map":{"version":3,"names":["styles","AsyncStorage","Button","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","navigation","_useState","_useState2","_slicedToArray","messageProfile","setMessageProfile","_useState3","_useState4","contain","setContain","userLogin","getUser","_ref2","_asyncToGenerator","values","getItem","Promise","resolve","length","reject","Error","setTimeout","JSON","parse","apply","arguments","user","then","names","View","style","container","children","view","flex","Supra","name","Text","fontFamily","fontSize","marginTop","Banner","props","Image","width","height","resizeMode","source","require"],"sources":["C:/Users/1/Desktop/Moviles3Momento3/Rent/screens/ProfileScreen.jsx"],"sourcesContent":["import { Text,View, Image } from \"react-native\";\r\nimport { styles } from \"../assets/styles/styles\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Button } from \"react-native-paper\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function ProfileScreen({navigation}){\r\n    const [messageProfile, setMessageProfile] = useState(\"\");\r\n    const [contain, setContain] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        userLogin()\r\n    },[])\r\n\r\n    const getUser = async () =>{\r\n        let values = await AsyncStorage.getItem('keyProfile')\r\n        return new Promise((resolve,  ) =>{\r\n            if(values.length === 0){\r\n                reject(new Error('No existen datos'))\r\n            }else{\r\n                setTimeout(()=>{\r\n                    resolve(JSON.parse(values));\r\n                },1000)\r\n            }\r\n        });\r\n    }\r\n\r\n    function userLogin(){\r\n        let user = getUser()\r\n        user\r\n        .then((values)=>{\r\n            setMessageProfile(`Bienvenido ${values.names}`)\r\n            setTimeout(()=>{\r\n                setContain(true)\r\n            },2000)\r\n        })\r\n    }\r\n\r\n    return (\r\n    <View style = {[styles.container]}>\r\n        <View style = {[styles.view,{flex:2}]}>\r\n            <Supra name=\"supra\"></Supra>\r\n        </View>\r\n        <View style = {[styles.view,{flex:4}]}>\r\n            <Text style={{fontFamily:'Arial',fontSize:30,marginTop:10}}>{messageProfile}</Text>\r\n        </View>\r\n        <View style = {[styles.view,{flex:3}]}>\r\n            \r\n            {contain && (\r\n                <Text style={{fontFamily:'Arial',fontSize:20,marginTop:10}}>Que deseas hacer</Text>\r\n            )}\r\n        </View>\r\n    </View>\r\n    );\r\n}   \r\n\r\n// function Banner(props) {\r\n//     return (\r\n//       <Image style={{ width: '100%', height: '100%', resizeMode: 'center' }} source={require(`../assets/${props.name}.png`)}>\r\n//       </Image>\r\n//     );\r\n//   }\r\n\r\n  function Banner(props) {\r\n    return (\r\n      <Image style={{ width: '100%', height: '100%', resizeMode: 'stretch' }} source={require(`../assets/${props.name}.gif`)}>\r\n      </Image>\r\n    );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}