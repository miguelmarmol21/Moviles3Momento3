{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useForm, Controller } from 'react-hook-form';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { styles } from \"../assets/styles/styles\";\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { size } from \"lodash\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NewPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    errorMessage = _useState2[0],\n    setErrorMessage = _useState2[1];\n  var _useForm = useForm({\n      defaultValues: {\n        newPassword: '',\n        confirmNewpassword: ''\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors,\n    reset = _useForm.reset,\n    setValue = _useForm.setValue;\n  var getIdUser = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var values = yield AsyncStorage.getItem('keyUsers');\n      return new Promise(function (resolve, reject) {\n        if (values.length === 0) {\n          reject(new Error('No existen datos'));\n        } else {\n          setTimeout(function () {\n            resolve(values.data);\n          }, 1500);\n        }\n      });\n    });\n    return function getIdUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontFamily: 'Arial',\n        fontSize: 25\n      },\n      children: \"Digita los datos\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true\n      },\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n        return _jsx(TextInput, {\n          style: styles.texinput,\n          activeOutlineColor: \"#0265FE\",\n          outlineColor: \"#919191\",\n          label: \"Nueva Contrase\\xF1a\",\n          mode: \"outlined\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"newPassword\"\n    }), errors.newPassword && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La contrase\\xF1a es obligatoria\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true\n      },\n      render: function render(_ref4) {\n        var _ref4$field = _ref4.field,\n          onChange = _ref4$field.onChange,\n          onBlur = _ref4$field.onBlur,\n          value = _ref4$field.value;\n        return _jsx(TextInput, {\n          style: styles.texinput,\n          activeOutlineColor: \"#0265FE\",\n          outlineColor: \"#919191\",\n          label: \"Confirmar Contrase\\xF1a\",\n          mode: \"outlined\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"confirmNewpassword\"\n    }), errors.confirmNewpassword && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Este campo es obligatorio\"\n    }), _jsx(Button, {\n      style: {\n        marginTop: 15,\n        marginEnd: 10\n      },\n      buttonColor: \"#0265FE\",\n      icon: \"content-save\",\n      mode: \"contained\",\n      children: \"Guardar\"\n    }), _jsx(Button, {\n      textColor: \"#0076C2\",\n      onPress: function onPress() {\n        navigation.navigate('Login');\n        setValue('');\n      },\n      children: \"Regresar\"\n    })]\n  });\n}","map":{"version":3,"names":["TextInput","Button","useForm","Controller","AsyncStorage","styles","useState","axios","size","jsx","_jsx","jsxs","_jsxs","NewPasswordScreen","_ref","navigation","_useState","_useState2","_slicedToArray","errorMessage","setErrorMessage","_useForm","defaultValues","newPassword","confirmNewpassword","control","handleSubmit","errors","formState","reset","setValue","getIdUser","_ref2","_asyncToGenerator","values","getItem","Promise","resolve","reject","length","Error","setTimeout","data","apply","arguments","View","style","container","children","Text","fontFamily","fontSize","rules","required","render","_ref3","_ref3$field","field","onChange","onBlur","value","texinput","activeOutlineColor","outlineColor","label","mode","onChangeText","name","color","_ref4","_ref4$field","marginTop","marginEnd","buttonColor","icon","textColor","onPress","navigate"],"sources":["C:/Users/1/Desktop/Moviles3Momento3/Rent/screens/NewPasswordScreen.jsx"],"sourcesContent":["import { Text,View } from \"react-native\"\r\nimport { TextInput, Button } from \"react-native-paper\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { styles } from \"../assets/styles/styles\";\r\nimport { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { size } from \"lodash\";\r\n\r\nexport default function NewPasswordScreen({navigation}){\r\n\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset, setValue } = useForm({\r\n        defaultValues: {\r\n          newPassword: '',\r\n          confirmNewpassword: ''\r\n        }\r\n      });\r\n    \r\n    //Funcion que obtiene los datos\r\n  const getIdUser = async () =>{\r\n    let values = await AsyncStorage.getItem('keyUsers')\r\n    return new Promise((resolve, reject) =>{\r\n      if(values.length === 0){\r\n        reject(new Error('No existen datos'))\r\n      }\r\n      else{\r\n        setTimeout(()=>{ \r\n          resolve(values.data);\r\n        },1500)\r\n      }\r\n    });\r\n  }\r\n\r\n    return (\r\n    <View style = {styles.container}>\r\n            <Text style={{fontFamily:'Arial',fontSize:25}}>Digita los datos</Text>\r\n            <Controller\r\n                control={control}\r\n                rules={{\r\n                  required: true,\r\n                }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                <TextInput\r\n                  style={styles.texinput}\r\n                  activeOutlineColor=\"#0265FE\"\r\n                  outlineColor=\"#919191\"\r\n                  label=\"Nueva Contraseña\"\r\n                  mode=\"outlined\"\r\n                  onBlur={onBlur}\r\n                  onChangeText={onChange}\r\n                  value={value}\r\n                />\r\n                )}\r\n              name=\"newPassword\"\r\n            />\r\n            {errors.newPassword && <Text style={{ color: 'red' }}>La contraseña es obligatoria</Text>}\r\n            <Controller\r\n                control={control}\r\n                rules={{\r\n                  required: true,\r\n                }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                <TextInput\r\n                  style={styles.texinput}\r\n                  activeOutlineColor=\"#0265FE\"\r\n                  outlineColor=\"#919191\"\r\n                  label=\"Confirmar Contraseña\"\r\n                  mode=\"outlined\"\r\n                  onBlur={onBlur}\r\n                  onChangeText={onChange}\r\n                  value={value}\r\n                />\r\n                )}\r\n              name=\"confirmNewpassword\"\r\n            />\r\n            {errors.confirmNewpassword && <Text style={{ color: 'red' }}>Este campo es obligatorio</Text>}\r\n            <Button\r\n              style={{ marginTop: 15, marginEnd: 10 }}\r\n              buttonColor=\"#0265FE\"\r\n              icon=\"content-save\" \r\n              mode=\"contained\" \r\n              // onPress={handleSubmit(onSave)}\r\n            >\r\n              Guardar\r\n            </Button>\r\n            <Button\r\n                textColor=\"#0076C2\"\r\n                onPress={()=>{\r\n                navigation.navigate('Login')\r\n                setValue('')\r\n            }}\r\n            >Regresar</Button>\r\n    </View>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}