{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TextInput } from \"react-native-paper\";\nimport { useState } from \"react\";\nimport { styles } from \"../assets/styles/styles\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport axios from 'axios';\nimport { set } from \"lodash\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RentScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    errorMess = _useState2[0],\n    setErrorMess = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cars = _useState4[0],\n    setCars = _useState4[1];\n  var _useState5 = useState(new Date()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    date = _useState6[0],\n    setDate = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPicker = _useState8[0],\n    setShowPicker = _useState8[1];\n  var URL = 'http://127.0.0.1:3600';\n  var getCustomers = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var response = yield axios.get(URL + \"/rent\");\n      console.log(response.data);\n      setCars(response.data);\n    });\n    return function getCustomers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleDatePicker = function toggleDatePicker() {\n    setShowPicker(!showPicker);\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(Text, {\n      style: {\n        fontFamily: 'Arial',\n        fontSize: 30,\n        marginTop: 10\n      },\n      children: \"Renta de Carros\"\n    }), _jsxs(Picker, {\n      mode: \"dropdown\",\n      style: styles.picker,\n      onValueChange: function onValueChange() {},\n      children: [_jsx(Picker.Item, {\n        label: \"\"\n      }), cars.map(function (car) {\n        return _jsx(Picker.Item, {\n          label: car.plateRent,\n          value: car.plateRent\n        }, car.plateRent);\n      })]\n    }), showPicker && _jsx(DateTimePicker, {\n      mode: \"date\",\n      display: \"spinner\",\n      value: date\n    }), _jsx(View, {\n      style: [{\n        flexDirection: \"row\",\n        marginTop: 20\n      }],\n      children: _jsx(Button, {\n        style: {\n          marginTop: 15,\n          marginEnd: 10\n        },\n        icon: \"share\",\n        mode: \"contained\",\n        buttonColor: \"#0265FE\",\n        onPress: getCustomers,\n        children: \"Buscar\"\n      })\n    }), _jsx(Text, {\n      style: {\n        fontFamily: 'Arial',\n        fontSize: 15,\n        marginTop: 20,\n        color: 'red'\n      },\n      children: errorMess\n    })]\n  });\n}","map":{"version":3,"names":["TextInput","useState","styles","DateTimePicker","axios","set","jsx","_jsx","jsxs","_jsxs","RentScreen","_ref","navigation","_useState","_useState2","_slicedToArray","errorMess","setErrorMess","_useState3","_useState4","cars","setCars","_useState5","Date","_useState6","date","setDate","_useState7","_useState8","showPicker","setShowPicker","URL","getCustomers","_ref2","_asyncToGenerator","response","get","console","log","data","apply","arguments","toggleDatePicker","View","style","container","children","Text","fontFamily","fontSize","marginTop","Picker","mode","picker","onValueChange","Item","label","map","car","plateRent","value","display","flexDirection","Button","marginEnd","icon","buttonColor","onPress","color"],"sources":["C:/Users/1/Desktop/Moviles3Momento3/Rent/screens/RentScreen.jsx"],"sourcesContent":["import { Text, View, Picker, Button } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { useState } from \"react\";\r\nimport { styles } from \"../assets/styles/styles\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport axios from 'axios';\r\nimport { set } from \"lodash\";\r\n\r\nexport default function RentScreen({ navigation }) {\r\n  const [errorMess, setErrorMess] = useState(\"\");\r\n  const [cars,setCars] = useState([]);\r\n  const [date, setDate] = useState(new Date());\r\n  const [showPicker, setShowPicker] = useState(false)\r\n\r\n  const URL = 'http://127.0.0.1:3600'\r\n\r\n  const   getCustomers = async () =>{\r\n    const response = await axios.get(`${URL}/rent`);\r\n    console.log(response.data)\r\n    setCars(response.data)\r\n  }\r\n\r\n  const toggleDatePicker = () =>{\r\n    setShowPicker(!showPicker)\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View style={[styles.container]}>\r\n      <Text style={{fontFamily:'Arial',fontSize:30,marginTop:10}}>Renta de Carros</Text>\r\n      <Picker\r\n        mode=\"dropdown\"\r\n        style={styles.picker}\r\n        onValueChange={()=>{}}\r\n      >\r\n        <Picker.Item label=\"\"/>\r\n      { \r\n        cars.map(car => <Picker.Item key={car.plateRent} label={car.plateRent} value={car.plateRent}/>)\r\n      }\r\n      </Picker>\r\n      {showPicker && (\r\n        <DateTimePicker\r\n          mode=\"date\"\r\n          display=\"spinner\"\r\n          value={date}\r\n        />\r\n      )}\r\n      {/* <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Nro Placa\"\r\n        mode=\"outlined\"\r\n        onChangeText={(plateNumber) => setPlateNumber(plateNumber)}\r\n        value={plateNumber}\r\n      />\r\n      <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Estado Placa\"\r\n        mode=\"outlined\"\r\n        editable={false}\r\n        value={stateCar =='' ? 'Disponible': stateCar}\r\n      />\r\n      <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Usuario\"\r\n        mode=\"outlined\"\r\n        onChangeText={(userName) => setUserName(userName)}\r\n        value={userName}\r\n      />\r\n      <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Nro Renta\"\r\n        mode=\"outlined\"\r\n        onChangeText={(rentNumber) => setRentNumber(rentNumber)}\r\n        value={rentNumber}\r\n      />\r\n      <TextInput\r\n        style={styles.texinput}\r\n        activeOutlineColor=\"#0265FE\"\r\n        outlineColor=\"#919191\"\r\n        label=\"Fecha Renta\"\r\n        mode=\"outlined\"\r\n        onChangeText={(rentDate) => setRentDate(rentDate)}\r\n        value={rentDate}\r\n      /> */}\r\n      <View style={[{flexDirection: \"row\", marginTop:20 }]}>\r\n        <Button\r\n          style={{ marginTop: 15, marginEnd: 10 }}\r\n          icon=\"share\"\r\n          mode=\"contained\"\r\n          buttonColor=\"#0265FE\"\r\n          onPress={getCustomers}\r\n        >Buscar</Button>\r\n        {/* <Button\r\n          style={{ marginTop: 15 }}\r\n          icon=\"repeat\"\r\n          mode=\"contained\"\r\n          buttonColor=\"#0265FE\"\r\n          onPress={loadDataCar}\r\n        >Buscar Placa</Button>\r\n      </View>\r\n      <View style={[{flexDirection: \"row\" }]}>\r\n      <Button\r\n        style={{ marginTop: 15, marginEnd: 10 }}\r\n        icon=\"repeat\"\r\n        mode=\"contained\"\r\n        buttonColor=\"#0265FE\"\r\n        onPress={searchRent}\r\n      >Listar</Button>\r\n      <Button\r\n        style={{ marginTop: 15, marginEnd: 10 }}\r\n        textColor=\"#0265FE\"\r\n        onPress={Limpiar}\r\n      >Limpiar</Button>\r\n      <Button\r\n            style={{marginTop:10}}\r\n            textColor=\"#0265FE\"\r\n            onPress={()=>{\r\n                navigation.navigate('Profile')\r\n            }}\r\n      >Volver</Button> */}\r\n      </View>\r\n      <Text style={{fontFamily:'Arial',fontSize:15,marginTop:20,color:'red'}}>{errorMess}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}