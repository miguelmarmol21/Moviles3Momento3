{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { useForm, Controller } from 'react-hook-form';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { styles } from \"../assets/styles/styles\";\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NewPasswordUserScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    errorMessage = _useState2[0],\n    setErrorMessage = _useState2[1];\n  var URL = 'http://127.0.0.1:3600';\n  var _useForm = useForm({\n      defaultValues: {\n        userName: ''\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors,\n    reset = _useForm.reset,\n    setValue = _useForm.setValue;\n  var getValuesArrayUser = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var values = yield axios.get(URL + \"/users\");\n      return new Promise(function (resolve, reject) {\n        if (values.length === 0) {\n          reject(new Error('No existen datos'));\n        } else {\n          setTimeout(function () {\n            resolve(values.data);\n          }, 1500);\n        }\n      });\n    });\n    return function getValuesArrayUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onSearchUser = function onSearchUser(data) {\n    var userName = data.userName;\n    var user = getValuesArrayUser();\n    user.then(function (values) {\n      var findUser = values.find(function (value) {\n        return value.userName == userName;\n      });\n      if (findUser != undefined) {\n        setErrorMessage('Verificando usuario');\n        AsyncStorage.setItem('keyUser', JSON.stringify(findUser._id));\n        setTimeout(function () {\n          navigation.navigate('NewPassword');\n        }, 3500);\n      } else {\n        setErrorMessage('Usuario no existe');\n      }\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontFamily: 'Arial',\n        fontSize: 25\n      },\n      children: \"\\xBFOlvidaste la contrase\\xF1a?\"\n    }), _jsx(Text, {\n      style: {\n        fontFamily: 'Arial',\n        fontSize: 20\n      },\n      children: \"Ingresa tu usuario\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true\n      },\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n        return _jsx(TextInput, {\n          style: styles.texinput,\n          activeOutlineColor: \"#0265FE\",\n          outlineColor: \"#919191\",\n          label: \"Usuario\",\n          mode: \"outlined\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"userName\"\n    }), errors.userName && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Digite un usuario\"\n    }), _jsx(Button, {\n      style: {\n        marginTop: 15,\n        marginEnd: 10\n      },\n      buttonColor: \"#0265FE\",\n      icon: \"content-save\",\n      mode: \"contained\",\n      onPress: handleSubmit(onSearchUser),\n      children: \"Guardar\"\n    }), _jsx(Button, {\n      textColor: \"#0076C2\",\n      onPress: function onPress() {\n        navigation.navigate('Login');\n        setValue('');\n      },\n      children: \"Regresar\"\n    }), _jsx(Text, {\n      style: {\n        fontFamily: 'Arial',\n        fontSize: 15,\n        marginTop: 20,\n        color: 'red'\n      },\n      children: errorMessage\n    })]\n  });\n}","map":{"version":3,"names":["TextInput","Button","useForm","Controller","AsyncStorage","styles","useState","axios","jsx","_jsx","jsxs","_jsxs","NewPasswordUserScreen","_ref","navigation","_useState","_useState2","_slicedToArray","errorMessage","setErrorMessage","URL","_useForm","defaultValues","userName","control","handleSubmit","errors","formState","reset","setValue","getValuesArrayUser","_ref2","_asyncToGenerator","values","get","Promise","resolve","reject","length","Error","setTimeout","data","apply","arguments","onSearchUser","user","then","findUser","find","value","undefined","setItem","JSON","stringify","_id","navigate","View","style","container","children","Text","fontFamily","fontSize","rules","required","render","_ref3","_ref3$field","field","onChange","onBlur","texinput","activeOutlineColor","outlineColor","label","mode","onChangeText","name","color","marginTop","marginEnd","buttonColor","icon","onPress","textColor"],"sources":["C:/Users/1/Desktop/Moviles3Momento3/Rent/screens/NewPasswordUserScreen.jsx"],"sourcesContent":["import { Text,View } from \"react-native\"\r\nimport { TextInput, Button } from \"react-native-paper\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { styles } from \"../assets/styles/styles\";\r\nimport { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport default function NewPasswordUserScreen({navigation}){\r\n\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const URL = 'http://127.0.0.1:3600'\r\n\r\n    const { control, handleSubmit, formState: { errors }, reset, setValue } = useForm({\r\n        defaultValues: {\r\n          userName: ''\r\n        }\r\n      });\r\n      \r\n    //Funcion que obtiene los datos\r\n    const getValuesArrayUser = async () =>{\r\n        let values = await axios.get(`${URL}/users`);\r\n        return new Promise((resolve, reject) =>{\r\n            if(values.length === 0){\r\n                reject(new Error('No existen datos'))\r\n            }\r\n            else{\r\n                setTimeout(()=>{ \r\n                    resolve(values.data);\r\n                },1500)\r\n            }\r\n        });\r\n    }\r\n\r\n    const onSearchUser = (data)=>{\r\n        const { userName } = data;\r\n        const user = getValuesArrayUser()\r\n        user.then((values)=>{\r\n            let findUser = values.find(value => value.userName == userName)\r\n            if(findUser != undefined){\r\n                setErrorMessage('Verificando usuario')\r\n                AsyncStorage.setItem('keyUser', JSON.stringify(findUser._id))\r\n                setTimeout(()=>{\r\n                    navigation.navigate('NewPassword')\r\n                },3500)\r\n            }else{\r\n                setErrorMessage('Usuario no existe')\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n    <View style = {styles.container}>\r\n            <Text style={{fontFamily:'Arial',fontSize:25}}>¿Olvidaste la contraseña?</Text>\r\n            <Text style={{fontFamily:'Arial',fontSize:20}}>Ingresa tu usuario</Text>\r\n            <Controller\r\n                control={control}\r\n                rules={{\r\n                  required: true,\r\n                }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                <TextInput\r\n                  style={styles.texinput}\r\n                  activeOutlineColor=\"#0265FE\"\r\n                  outlineColor=\"#919191\"\r\n                  label=\"Usuario\"\r\n                  mode=\"outlined\"\r\n\r\n                  onBlur={onBlur}\r\n                  onChangeText={onChange}\r\n                  value={value}\r\n                />\r\n                )}\r\n              name=\"userName\"\r\n            />\r\n            {errors.userName && <Text style={{ color: 'red' }}>Digite un usuario</Text>}\r\n            <Button\r\n              style={{ marginTop: 15, marginEnd: 10 }}\r\n              buttonColor=\"#0265FE\"\r\n              icon=\"content-save\" \r\n              mode=\"contained\" \r\n              onPress={handleSubmit(onSearchUser)}\r\n            // onPress={()=>{\r\n            //     AsyncStorage.clear()\r\n            // }}\r\n            >Guardar</Button>\r\n            <Button\r\n                textColor=\"#0076C2\"\r\n                onPress={()=>{\r\n                navigation.navigate('Login')\r\n                setValue('')\r\n            }}\r\n            >Regresar</Button>\r\n            <Text style={{fontFamily:'Arial',fontSize:15,marginTop:20,color:'red'}}>{errorMessage}</Text>\r\n    </View>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}